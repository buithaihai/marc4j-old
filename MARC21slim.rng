<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE grammar SYSTEM "relaxng.dtd">
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:a="http://www.marc4j.org/annotation"
	 ns="http://www.loc.gov/MARC21/slim"
	 datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

  <start>
    <a:documentation>collection is a top level container 
element for 0 or many records</a:documentation> 
    <element name="collection">
      <ref name="collectionType"/>
    </element>
  </start>

  <define name="collectionType">
    <zeroOrMore>
      <a:documentation>record is a top level container element for 
all of the field elements which compose the record</a:documentation>
      <element name="record">
	<ref name="recordType"/>
      </element>
    </zeroOrMore>
    <optional>
      <ref name="idType"/>
    </optional>
  </define>

  <define name="recordType">
    <a:documentation>MARC21 Leader, 24 bytes</a:documentation>
    <element name="leader">
      <ref name="leaderFieldType"/>
    </element>
    <zeroOrMore>
      <a:documentation>MARC21 Fields 001-009</a:documentation>
      <element name="controlfield">
	<ref name="controlFieldType"/>
      </element>
    </zeroOrMore>
    <zeroOrMore>
      <a:documentation>MARC21 Variable Data Fields 010-999</a:documentation>
      <element name="datafield">
	<ref name="dataFieldType"/>
      </element>
    </zeroOrMore>
    <optional>
      <ref name="idType"/>
    </optional>
    <optional>
      <attribute name="type">
	<choice>
	  <value>Bibliographic</value>
	  <value>Authority</value>
	  <value>Holdings</value>
	  <value>Classification</value>
	  <value>Community</value>
	</choice>
      </attribute>
    </optional>
  </define>

  <define name="leaderFieldType">
    <ref name="leaderFieldDataType"/>
    <optional>
      <ref name="idType"/>
    </optional>
  </define>

  <define name="controlFieldType">
    <optional>
      <ref name="idType"/>
    </optional>
    <attribute name="tag">
      <ref name="controlFieldTagDataType"/>
    </attribute>
    <data type="string"/>
  </define>

  <define name="dataFieldType">
    <zeroOrMore>
      <element name="subfield">
	<ref name="subfieldType"/>
      </element>
    </zeroOrMore>
    <optional>
      <ref name="idType"/>
    </optional>
    <attribute name="tag">
      <ref name="dataFieldTagDataType"/>
    </attribute>
    <attribute name="ind1">
      <ref name="indicatorDataType"/>
    </attribute>
    <attribute name="ind2">
      <ref name="indicatorDataType"/>
    </attribute>
  </define>

  <define name="subfieldType">
    <data type="string"/>
    <optional>
      <ref name="idType"/>
    </optional>
    <attribute name="code">
      <ref name="codeDataType"/>
    </attribute>
  </define>

  <define name="idType">
    <attribute name="id">
      <data type="ID"/>
    </attribute>
  </define>

  <define name="indicatorDataType">
    <data type="string">
      <param name="pattern">[\da-z ]{1}</param>
    </data>
  </define>

  <define name="codeDataType">
    <data type="string">
      <param name="pattern">[\da-z!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?{}_^`~\[\]\\]{1}</param>
    </data>
  </define>

  <define name="leaderFieldDataType">
    <data type="string">
      <param name="pattern">[\d ]{5}[\dA-Za-z ]{1}[\dA-Za-z]{1}[\dA-Za-z ]{3}(2| )(2| )[\d ]{5}[\dA-Za-z ]{3}(4500|    )</param>
    </data>
  </define>

  <define name="controlFieldTagDataType">
    <data type="string">
      <param name="pattern">00[1-9A-Za-z]{1}</param>
    </data>
  </define>

  <define name="dataFieldTagDataType">
    <data type="string">
      <param name="pattern">(0([1-9A-Z][0-9A-Z])|0([1-9a-z][0-9a-z]))|(([1-9A-Z][0-9A-Z]{2})|([1-9a-z][0-9a-z]{2}))</param>
    </data>
  </define>

</grammar>